
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVrightUMENOSleftPARIZQPARDERDECIMAL DIV ENTERO ID IGUAL MAS MENOS PARDER PARIZQ PORr  :   ee  :     e   MAS     e\n            |   e   MENOS   e\n            |   e   POR     e\n            |   e   DIV     e e  :     MENOS   e   %prec   UMENOSe : PARIZQ e PARDERe    : ENTERO\n            | DECIMAL\n            | ID'
    
_lr_action_items = {'MENOS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,],[3,9,3,3,-8,-9,-10,3,3,3,3,-6,9,-2,-3,-4,-5,-7,]),'PARIZQ':([0,3,4,8,9,10,11,],[4,4,4,4,4,4,4,]),'ENTERO':([0,3,4,8,9,10,11,],[5,5,5,5,5,5,5,]),'DECIMAL':([0,3,4,8,9,10,11,],[6,6,6,6,6,6,6,]),'ID':([0,3,4,8,9,10,11,],[7,7,7,7,7,7,7,]),'$end':([1,2,5,6,7,12,14,15,16,17,18,],[0,-1,-8,-9,-10,-6,-2,-3,-4,-5,-7,]),'MAS':([2,5,6,7,12,13,14,15,16,17,18,],[8,-8,-9,-10,-6,8,-2,-3,-4,-5,-7,]),'POR':([2,5,6,7,12,13,14,15,16,17,18,],[10,-8,-9,-10,-6,10,10,10,-4,-5,-7,]),'DIV':([2,5,6,7,12,13,14,15,16,17,18,],[11,-8,-9,-10,-6,11,11,11,-4,-5,-7,]),'PARDER':([5,6,7,12,13,14,15,16,17,18,],[-8,-9,-10,-6,18,-2,-3,-4,-5,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'r':([0,],[1,]),'e':([0,3,4,8,9,10,11,],[2,12,13,14,15,16,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> r","S'",1,None,None,None),
  ('r -> e','r',1,'p_expresion_r_7','gramatica.py',101),
  ('e -> e MAS e','e',3,'p_expresion_binaria','gramatica.py',109),
  ('e -> e MENOS e','e',3,'p_expresion_binaria','gramatica.py',110),
  ('e -> e POR e','e',3,'p_expresion_binaria','gramatica.py',111),
  ('e -> e DIV e','e',3,'p_expresion_binaria','gramatica.py',112),
  ('e -> MENOS e','e',2,'p_expresion_unaria','gramatica.py',120),
  ('e -> PARIZQ e PARDER','e',3,'p_expresion_agrupacion','gramatica.py',126),
  ('e -> ENTERO','e',1,'p_expresion_number','gramatica.py',131),
  ('e -> DECIMAL','e',1,'p_expresion_number','gramatica.py',132),
  ('e -> ID','e',1,'p_expresion_number','gramatica.py',133),
]
